<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Carrito</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light d-flex flex-column min-vh-100">

  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Mi Tienda</a>
      <div class="collapse navbar-collapse">
        <ul class="navbar-nav ms-auto align-items-center">
          <li class="nav-item"><a class="nav-link" href="/products">Productos</a></li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <h1>Carrito</h1>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Producto</th>
          <th>Precio</th>
          <th>Cantidad</th>
          <th>Subtotal</th>
          <th>Acciones</th>
        </tr>
      </thead>
      <tbody>
        {{#each products}}
        <tr data-product-id="{{product._id}}">
          <td>{{product.title}}</td>
          <td>${{product.price}}</td>
          <td>
            <button class="btn btn-sm btn-secondary decrease">-</button>
            {{quantity}}
            <button class="btn btn-sm btn-secondary increase">+</button>
          </td>
          <td>${{multiply product.price quantity}}</td>
          <td>
            <button class="btn btn-sm btn-danger remove">Eliminar</button>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>

    <h3>Total: ${{total}}</h3>
  </div>

  <script>
    const table = document.querySelector("table tbody");
    const cartId = "{{cartId}}";

    // Función para actualizar cantidad
    const updateQuantity = async (pid, quantity) => {
      try {
        const res = await fetch(`/api/carts/${cartId}/products/${pid}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ quantity })
        });
        if (!res.ok) throw new Error("Error al actualizar cantidad");
        location.reload();
      } catch (err) {
        console.error(err);
      }
    };

    // Función para eliminar producto
    const removeProduct = async (pid) => {
      try {
        const res = await fetch(`/api/carts/${cartId}/products/${pid}`, {
          method: "DELETE"
        });
        if (!res.ok) throw new Error("Error al eliminar producto");
        location.reload();
      } catch (err) {
        console.error(err);
      }
    };

    table.addEventListener("click", (e) => {
      const row = e.target.closest("tr");
      if (!row) return;
      const pid = row.dataset.productId;

      if (e.target.classList.contains("increase")) {
        const qty = parseInt(row.querySelector("td:nth-child(3)").textContent) + 1;
        updateQuantity(pid, qty);
      }

      if (e.target.classList.contains("decrease")) {
        const qty = parseInt(row.querySelector("td:nth-child(3)").textContent) - 1;
        if (qty > 0) updateQuantity(pid, qty);
      }

      if (e.target.classList.contains("remove")) {
        removeProduct(pid);
      }
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
